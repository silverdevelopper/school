// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using school.Data;

namespace school.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20200125152516_dbmigration")]
    partial class dbmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("school.Models.Classe", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("school.Models.Student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClasseID");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("id");

                    b.HasIndex("ClasseID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("school.Models.Student", b =>
                {
                    b.HasOne("school.Models.Classe", "Classe")
                        .WithMany()
                        .HasForeignKey("ClasseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
